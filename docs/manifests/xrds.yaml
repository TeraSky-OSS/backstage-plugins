apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: apps.terasky.demo
spec:
  group: terasky.demo
  names:
    kind: App
    plural: apps
  claimNames:
    kind: AppClaim
    plural: appclaims
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              id:
                type: string
                description: ID of this application that other objects will use to refer to it.
              parameters:
                type: object
                properties:
                  image:
                    description: The container image of the application
                    type: string
                  tag:
                    description: The container image tag
                    type: string
                    default: latest
                  port:
                    description: The application port
                    type: integer
                    default: 80
                  host:
                    description: The host address of the application
                    type: string
                required:
                - image
                - host
            required:
            - parameters
---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: databases.terasky.demo
spec:
  group: terasky.demo
  names:
    kind: Database
    plural: databases
  claimNames:
    kind: DatabaseClaim
    plural: databaseclaims
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              parameters:
                type: object
                properties:
                  engine:
                    description: The DB Engine to Deploy
                    type: string
                    default: postgresql
                    enum:
                    - postgresql
                    - mysql
                  dbName:
                    description: The name of the database to create
                    type: string
                    default: mydb
                  storageGB:
                    description: The DB size in GB
                    type: integer
                    default: 10
                    enum:
                    - 10
                    - 20
                    - 50
                required:
                - dbName
                - engine
                - storageGB
            required:
            - parameters
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: dev-db
spec:
  compositeTypeRef:
    apiVersion: terasky.demo/v1alpha1
    kind: Database
  mode: Pipeline
  pipeline:
  - step: helm
    functionRef:
      name: crossplane-contrib-function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            name: dev-{{ .observed.composite.resource.metadata.name }}-{{ .observed.composite.resource.spec.parameters.engine }}
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: dev-{{ .observed.composite.resource.metadata.name }}-{{ .observed.composite.resource.spec.parameters.engine }}
          spec:
            forProvider:
              chart:
                name: {{ .observed.composite.resource.spec.parameters.engine }}
                repository: https://charts.bitnami.com/bitnami
              namespace: {{ .observed.composite.resource.metadata.namespace }}
              values:
                auth:
                  database: {{ .observed.composite.resource.spec.parameters.dbName }}
                primary:
                  persistence:
                    size: {{ .observed.composite.resource.spec.parameters.storageGB }}Gi
  - step: ready
    functionRef:
      name: crossplane-contrib-function-auto-ready
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: prod-db
spec:
  compositeTypeRef:
    apiVersion: terasky.demo/v1alpha1
    kind: Database
  mode: Pipeline
  pipeline:
  - step: helm
    functionRef:
      name: crossplane-contrib-function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            name: prod-{{ .observed.composite.resource.metadata.name }}-{{ .observed.composite.resource.spec.parameters.engine }}
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: prod-{{ .observed.composite.resource.metadata.name }}-{{ .observed.composite.resource.spec.parameters.engine }}
          spec:
            forProvider:
              chart:
                name: {{ .observed.composite.resource.spec.parameters.engine }}
                repository: https://charts.bitnami.com/bitnami
              namespace: {{ .observed.composite.resource.metadata.namespace }}
              values:
                auth:
                  database: {{ .observed.composite.resource.spec.parameters.dbName }}
                primary:
                  persistence:
                    size: {{ .observed.composite.resource.spec.parameters.storageGB }}Gi
  - step: ready
    functionRef:
      name: crossplane-contrib-function-auto-ready
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: dev-app
spec:
  compositeTypeRef:
    apiVersion: terasky.demo/v1alpha1
    kind: App
  mode: Pipeline
  pipeline:
  - step: k8s
    functionRef:
      name: crossplane-contrib-function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: dev-{{ .observed.composite.resource.metadata.name }}-deployment
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: dev-{{ .observed.composite.resource.metadata.name }}-deployment
          spec:
            forProvider:
              manifest:
                apiVersion: apps/v1
                kind: Deployment
                metadata:
                  labels:
                    app.kubernetes.io/name: {{ .observed.composite.resource.metadata.name }}
                  name: {{ .observed.composite.resource.metadata.name }}
                  namespace: {{ .observed.composite.resource.metadata.namespace }}
                spec:
                  selector:
                    matchLabels:
                      app.kubernetes.io/name: {{ .observed.composite.resource.metadata.name }}
                  template:
                    metadata:
                      labels:
                        app.kubernetes.io/name: {{ .observed.composite.resource.metadata.name }}
                    spec:
                      containers:
                      - image: {{ .observed.composite.resource.spec.parameters.image }}:{{ .observed.composite.resource.spec.parameters.tag }}
                        name: app
                        ports:
                        - containerPort: {{ .observed.composite.resource.spec.parameters.port }}
                          name: app
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: dev-{{ .observed.composite.resource.metadata.name }}-service
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: dev-{{ .observed.composite.resource.metadata.name }}-service
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Service
                metadata:
                  labels:
                    app.kubernetes.io/name: {{ .observed.composite.resource.metadata.name }}
                  name: {{ .observed.composite.resource.metadata.name }}
                  namespace: {{ .observed.composite.resource.metadata.namespace }}
                spec:
                  ports:
                  - name: app
                    port: {{ .observed.composite.resource.spec.parameters.port }}
                    targetPort: app
                  selector:
                    app.kubernetes.io/name: {{ .observed.composite.resource.metadata.name }}
  - step: ready
    functionRef:
      name: crossplane-contrib-function-auto-ready
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: prod-app
spec:
  compositeTypeRef:
    apiVersion: terasky.demo/v1alpha1
    kind: App
  mode: Pipeline
  pipeline:
  - step: k8s
    functionRef:
      name: crossplane-contrib-function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: prod-{{ .observed.composite.resource.metadata.name }}-deployment
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: prod-{{ .observed.composite.resource.metadata.name }}-deployment
          spec:
            forProvider:
              manifest:
                apiVersion: apps/v1
                kind: Deployment
                metadata:
                  labels:
                    app.kubernetes.io/name: {{ .observed.composite.resource.metadata.name }}
                  name: {{ .observed.composite.resource.metadata.name }}
                  namespace: {{ .observed.composite.resource.metadata.namespace }}
                spec:
                  selector:
                    matchLabels:
                      app.kubernetes.io/name: {{ .observed.composite.resource.metadata.name }}
                  template:
                    metadata:
                      labels:
                        app.kubernetes.io/name: {{ .observed.composite.resource.metadata.name }}
                    spec:
                      containers:
                      - image: {{ .observed.composite.resource.spec.parameters.image }}:{{ .observed.composite.resource.spec.parameters.tag }}
                        name: app
                        ports:
                        - containerPort: {{ .observed.composite.resource.spec.parameters.port }}
                          name: app
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: prod-{{ .observed.composite.resource.metadata.name }}-service
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: prod-{{ .observed.composite.resource.metadata.name }}-service
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Service
                metadata:
                  labels:
                    app.kubernetes.io/name: {{ .observed.composite.resource.metadata.name }}
                  name: {{ .observed.composite.resource.metadata.name }}
                  namespace: {{ .observed.composite.resource.metadata.namespace }}
                spec:
                  ports:
                  - name: app
                    port: {{ .observed.composite.resource.spec.parameters.port }}
                    targetPort: app
                  selector:
                    app.kubernetes.io/name: {{ .observed.composite.resource.metadata.name }}
  - step: ready
    functionRef:
      name: crossplane-contrib-function-auto-ready