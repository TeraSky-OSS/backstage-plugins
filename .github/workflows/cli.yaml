name: CLI Release

on:
  push:
    tags:
      - 'CLI-*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed to create and update GitHub releases
      id-token: write  # Required for keyless signing with Cosign

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Extract Version from Tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/CLI-}" >> $GITHUB_ENV

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.7.0

      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0

      - name: Build Binaries
        run: |
          platforms=("linux/amd64" "linux/arm64" "darwin/amd64" "darwin/arm64" "windows/amd64")
          cd cli/backstage-config-generator
          for platform in "${platforms[@]}"; do
            os="${platform%/*}"
            arch="${platform#*/}"
            output="../../dist/backstage-config-generator_${os}_${arch}"
            [ "$os" == "windows" ] && output="../../${output}.exe"
            GOOS=$os GOARCH=$arch CGO_ENABLED=0 go build -o "$output"
          done
          cd ../../

      - name: Sign Binaries with Cosign (Keyless)
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          for binary in dist/backstage-config-generator_*; do
            if [[ -f "$binary" && -x "$binary" ]]; then
              cosign sign-blob --output-signature "dist/${binary}.sig" --output-certificate "dist/${binary}.cert" --oidc-issuer=https://token.actions.githubusercontent.com "$binary"
            fi
          done

      - name: Generate SBOMs for Binaries
        run: |
          for binary in dist/backstage-config-generator_*; do
            if [[ -f "$binary" ]]; then
              syft packages file:"$binary" -o spdx-json > "$binary.sbom.json"
            fi
          done

      - name: Sign SBOMs with Cosign (Keyless)
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          for sbom in dist/*.sbom.json; do
            cosign sign-blob --output-signature "dist/${sbom}.sig" --output-certificate "dist/${sbom}.cert" --oidc-issuer=https://token.actions.githubusercontent.com "$sbom"
          done

      - name: Generate Release Notes
        id: changelog
        run: |
          echo "## Changes" > changelog.md
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0)..HEAD >> changelog.md
          echo "::set-output name=notes::$(cat changelog.md)"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.notes }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./dist
          asset_name: $(basename "$asset")
          asset_content_type: application/octet-stream